{
  "swagger": "2.0",
  "info": {
    "title": "Healthy Gaming Timer API",
    "description": "API documentation for authentication and status endpoints",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication routes using Google or Email"
    },
    {
      "name": "Session",
      "description": "Gaming session management"
    },
    {
      "name": "Reminders",
      "description": "Health reminder settings"
    },
    {
      "name": "Goals",
      "description": "Daily health goals tracking"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/status": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Start Google OAuth login",
        "description": "",
        "responses": {
          "302": {
            "description": "Redirect to Google login"
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Handle Google OAuth callback",
        "description": "",
        "responses": {
          "302": {
            "description": "Redirect to dashboard or login on failure"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout the user",
        "description": "",
        "responses": {
          "302": {
            "description": "Redirect to home page"
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user with email and password",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User registration data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Validation error or user already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login with email and password",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User login data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful, returns JWT token"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current logged-in user profile",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user profile data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/user/delete": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Delete the current logged-in user account",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Account deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error or failed to delete"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/session/start": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Start a gaming session",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/session/end": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "End a gaming session",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sessionId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/session/": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "Get sessions for current user",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/session/{sessionId}": {
      "delete": {
        "tags": [
          "Session"
        ],
        "summary": "Delete a session",
        "description": "",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/reminders/": {
      "get": {
        "tags": [
          "Reminders"
        ],
        "summary": "Get all reminders for the authenticated user",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of reminders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reminder"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Reminders"
        ],
        "summary": "Create or update a reminder",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Reminder details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "break"
                },
                "frequency": {
                  "type": "number",
                  "example": 15
                },
                "status": {
                  "type": "string",
                  "example": "active"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder created or updated",
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/goals/": {
      "get": {
        "tags": [
          "Goals"
        ],
        "summary": "Get all health goals for the authenticated user",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of goals",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Goal"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Goals"
        ],
        "summary": "Create a new health goal",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Goal info",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Take breaks regularly"
                },
                "target": {
                  "type": "number",
                  "example": 5
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Goal created successfully",
            "schema": {
              "$ref": "#/definitions/Goal"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/goals/{goalId}": {
      "put": {
        "tags": [
          "Goals"
        ],
        "summary": "Update progress of a health goal",
        "description": "",
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of goal to update"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Progress update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "progress": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Goal updated successfully",
            "schema": {
              "$ref": "#/definitions/Goal"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Goal not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Goals"
        ],
        "summary": "Delete a health goal",
        "description": "",
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of goal to delete"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Goal deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Goal not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}